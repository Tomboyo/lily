<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.tomboyo.lily</groupId>
    <artifactId>lily</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>Parent project for the Lily OAS compiler.</description>
    <url>https://github.com/Tomboyo/lily</url>

    <scm>
        <connection>scm:git:git@github.com:Tomboyo/lily.git</connection>
        <developerConnection>scm:git:git@github.com:Tomboyo/lily.git</developerConnection>
        <url>https://github.com/Tomboyo/lily</url>
    </scm>

    <licenses>
        <license>
            <name>GPL3 License</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Thomas Simmons</name>
            <email>tomasimmons@gmail.com</email>
            <organization>Thomas Simmons</organization>
            <organizationUrl>https://tomboyo.github.io/</organizationUrl>
        </developer>
    </developers>

    <modules>
        <module>modules/lily-compiler</module>
        <module>modules/lily-compiler-maven-plugin</module>
        <module>modules/example</module>
        <module>modules/lily-http</module>
    </modules>

    <properties>
        <!-- Override this during releases. -->
        <revision>0.0.0-SNAPSHOT</revision>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.project.dir>${project.basedir}</main.project.dir>
        <it.repository.url>file://${main.project.dir}/target/it-repository</it.repository.url>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
              <groupId>org.clojure</groupId>
              <artifactId>clojure</artifactId>
              <version>1.12.0</version>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.8.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>4.6.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.11</version>
        </dependency>
    </dependencies>

    <build>
      <pluginManagement>
        <plugins>
          <plugin>
            <groupId>com.theoryinpractise</groupId>
            <artifactId>clojure-maven-plugin</artifactId>
            <version>1.9.3</version>
          </plugin>
        </plugins>
      </pluginManagement>
        <plugins>
            <plugin>
                <!-- Runs before integration testing to ensure the plugin module and dependent poms are installed where
                     the it-project can find them. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
                <executions>
                    <execution>
                        <id>deploy-plugin-to-it-repository</id>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <!-- URLs must be defined in each project. Maven doesn't have a consistent reference to the multi-
                                 module root dir. -->
                            <altDeploymentRepository>
                                it-repository::${it.repository.url}
                            </altDeploymentRepository>
                            <altReleaseDeploymentRepository>
                                it-repository::${it.repository.url}
                            </altReleaseDeploymentRepository>
                            <altSnapshotDeploymentRepository>
                                it-repository::${it.repository.url}
                            </altSnapshotDeploymentRepository>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>2.43.0</version>
                <configuration>
                    <java>
                        <googleJavaFormat>
                            <version>1.24.0</version>
                            <style>GOOGLE</style>
                            <reflowLongStrings>true</reflowLongStrings>
                        </googleJavaFormat>
                    </java>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <modules>
                <module>modules/lily-compiler</module>
                <module>modules/lily-compiler-maven-plugin</module>
<!--            <module>modules/example</module>-->
                <module>modules/lily-http</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.4.0</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- Prevent `gpg` from using pin entry programs -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!--
                            This plugin resolves $revision in the parent pom coordinates. Maven will use the string
                            literally otherwise.
                        -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                        <version>1.2.7</version>
                        <configuration>
                            <flattenMode>resolveCiFriendliesOnly</flattenMode>
                            <updatePomFile>true</updatePomFile>
                        </configuration>
                        <executions>
                            <!-- enable flattening -->
                            <execution>
                                <id>flatten</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>flatten</goal>
                                </goals>
                            </execution>
                            <!-- ensure proper cleanup -->
                            <execution>
                                <id>flatten.clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
