name: release
on:
  release:
    types:
      - created
  workflow_dispatch:
    inputs:
      release_tag:
        description: What tag to release
        required: true
        type: string
jobs:
  check_tag:
    runs-on: ubuntu-latest
    outputs:
      is_maven_release: ${{ steps.check-tag.outputs.is_maven_release }}
      version: ${{ steps.check-tag.outputs.version }}
    steps:
      - name: check tag (${{ github.event.release.tag_name }})
        id: check-tag
        run: |
          if [[ "$RELEASE_TAG" != "" ]] ; then
            >&2 echo "Manual release requested"
            # This is a manual release
            if [[ $RELEASE_TAG =~ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
              VERSION=${RELEASE_TAG#*v}
              >&2 echo "Performing manual release of version $VERSION"
              echo "is_maven_release=true" >> $GITHUB_OUTPUT
              echo "version=$VERSION" >> $GITHUB_OUTPUT
              exit 0
            else
              >&2 echo "Release tag $RELEASE_TAG does not follow vX.Y.Z format!"
              exit 1
            fi
          fi
          
          # This is an automated release, not a manual release.
          # parse the release version from the tag name
          TAG="${{ github.event.release.tag_name }}"
          if [[ $TAG =~ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            VERSION=${TAG#*v}
            >&2 echo "Performing automatic release of version $VERSION"
            echo "is_maven_release=true" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            >&2 echo "Ignoring non-release tag $TAG"
            echo "is_maven_release=false" >> $GITHUB_OUTPUT
          fi
        env:
          RELEASE_TAG: ${{ inputs.release_tag }}
  release:
    name: 'release'
    needs: [check_tag]
    if: needs.check_tag.outputs.is_maven_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
      - uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.OSSRH_USERNAME }}
          nexus_password: ${{ secrets.OSSRH_TOKEN }}
          maven_profiles: release
          maven_args: -ntp -Drevision=${{ needs.check_tag.outputs.version }}
